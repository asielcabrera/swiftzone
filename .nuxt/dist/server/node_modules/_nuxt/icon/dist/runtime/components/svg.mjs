import { Icon } from "@iconify/vue";
import { defineComponent, h } from "vue";
import { useResolvedName, loadIcon } from "./shared.mjs";
import { useAsyncData } from "../../../../../nuxt/dist/app/composables/asyncData.mjs";
import { useNuxtApp } from "../../../../../nuxt/dist/app/nuxt.mjs";
import { useAppConfig } from "../../../../../nuxt/dist/app/config.mjs";
const NuxtIconSvg = /* @__PURE__ */ defineComponent({
  name: "NuxtIconSvg",
  props: {
    name: {
      type: String,
      required: true
    },
    customize: {
      type: Function,
      required: false
    }
  },
  setup(props, { slots }) {
    useNuxtApp();
    const options = useAppConfig().icon;
    const name = useResolvedName(() => props.name);
    const storeKey = "i-" + name.value;
    if (name.value) {
      {
        useAsyncData(
          storeKey,
          () => loadIcon(name.value, options.fetchTimeout),
          { deep: false }
        );
      }
    }
    return () => h(Icon, {
      icon: name.value,
      ssr: true,
      // Iconify uses `customise`, where we expose `customize` for consistency
      customise: props.customize ?? options.customize
    }, slots);
  }
});
export {
  NuxtIconSvg
};
//# sourceMappingURL=svg.mjs.map
