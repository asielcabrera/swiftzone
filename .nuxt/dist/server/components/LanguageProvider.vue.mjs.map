{"version":3,"file":"LanguageProvider.vue.mjs","sources":["../../../../components/LanguageProvider.vue"],"sourcesContent":["<template>\n    <slot></slot>\n</template>\n\n<script setup>\nimport { ref, provide } from 'vue';\nimport enTranslations from '~/locales/en.json';\nimport esTranslations from '~/locales/es.json';\n\nconst language = ref('en');\nconst translations = {\n  en: enTranslations,\n  es: esTranslations\n};\n\nconst t = (key) => {\n  const keys = key.split('.');\n  let result = translations[language.value];\n  \n  for (const k of keys) {\n    if (result && result[k]) {\n      result = result[k];\n    } else {\n      return key; // Fallback to key if translation not found\n    }\n  }\n  \n  return result;\n};\n\nconst setLanguage = (lang) => {\n  if (translations[lang]) {\n    language.value = lang;\n  }\n};\n\n// Provide the language context to all components\nprovide('language', {\n  language,\n  t,\n  setLanguage\n});\n</script>"],"names":[],"mappings":";;;;;;;;AASA,UAAM,WAAW,IAAI,IAAI;AACzB,UAAM,eAAe;AAAA,MACnB,IAAI;AAAA,MACJ,IAAI;AAAA,IACN;AAEA,UAAM,IAAI,CAAC,QAAQ;AACjB,YAAM,OAAO,IAAI,MAAM,GAAG;AAC1B,UAAI,SAAS,aAAa,SAAS,KAAK;AAExC,iBAAW,KAAK,MAAM;AACpB,YAAI,UAAU,OAAO,CAAC,GAAG;AACvB,mBAAS,OAAO,CAAC;AAAA,QACvB,OAAW;AACL,iBAAO;AAAA,QACb;AAAA,MACA;AAEE,aAAO;AAAA,IACT;AAEA,UAAM,cAAc,CAAC,SAAS;AAC5B,UAAI,aAAa,IAAI,GAAG;AACtB,iBAAS,QAAQ;AAAA,MACrB;AAAA,IACA;AAGA,YAAQ,YAAY;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;;;;;;;;;;;;"}