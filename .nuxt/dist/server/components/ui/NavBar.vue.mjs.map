{"version":3,"file":"NavBar.vue.mjs","sources":["../../../../../components/ui/NavBar.vue"],"sourcesContent":["<template>\n  <header\n    :class=\"[\n      'fixed top-0 left-0 right-0 z-50 transition-all duration-300',\n      scrolled ? 'bg-secondary/95 backdrop-blur-md py-3 shadow-sm' : 'bg-secondary py-4'\n    ]\"\n  >\n    <div class=\"container-custom\">\n      <div class=\"flex items-center justify-between\">\n        <!-- Left Navigation Links -->\n        <nav class=\"hidden md:flex items-center gap-8\">\n          <nuxt-link\n            v-for=\"link in navLinksLeft\"\n            :key=\"link.key\"\n            :to=\"link.href\"\n            @click=\"(e) => link.isAnchor ? handleAnchorClick(e, link.anchorId) : undefined\"\n            class=\"text-primary hover:text-primary/80 font-medium transition-colors\"\n          >\n            {{ t(link.key) }}\n          </nuxt-link>\n        </nav>\n\n        <!-- Center Logo for Desktop -->\n        <div class=\"hidden md:flex flex-shrink-0 justify-center md:absolute md:left-1/2 md:transform md:-translate-x-1/2 pt-5 pb-5\">\n          <nuxt-link to=\"/\" class=\"flex items-center\">\n          <Icon name=\"Logo:dark\" :size=\"45\"/>\n          </nuxt-link>\n        </div>\n\n        <!-- Logo for Mobile -->\n        <div class=\"md:hidden flex items-center\">\n          <nuxt-link to=\"/\" class=\"flex items-center\">\n            <Icon name=\"Logo:dark\" :size=\"45\"/>\n          </nuxt-link>\n        </div>\n\n        <!-- Right Navigation Links -->\n        <nav class=\"hidden md:flex items-center gap-8\">\n          <nuxt-link\n            v-for=\"link in navLinksRight\"\n            :key=\"link.key\"\n            :to=\"link.href\"\n            @click=\"(e) => link.isAnchor ? handleAnchorClick(e, link.anchorId) : undefined\"\n            class=\"text-primary hover:text-primary/80 font-medium transition-colors\"\n          >\n            {{ t(link.key) }}\n          </nuxt-link>\n          <!-- <LanguageSwitcher\n            variant=\"minimal\"\n            class=\"text-primary hover:text-primary/80\"\n          /> -->\n        </nav>\n\n        <!-- Mobile Button -->\n        <div class=\"md:hidden flex items-center gap-3 relative z-50\">\n          <!-- <LanguageSwitcher\n            variant=\"minimal\"\n            class=\"text-primary\"\n          /> -->\n          <button\n            type=\"button\"\n            class=\"focus:outline-none text-primary p-2 rounded-md transition-colors\"\n            @click=\"isOpen = !isOpen\"\n            aria-label=\"Toggle menu\"\n          >\n            <Icon v-if=\"isOpen\" name=\"material-symbols:close\" :size=\"24\" />\n            <Icon v-else name=\"heroicons:bars-3\" :size=\"24\" />\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Mobile Menu -->\n    <div\n      :class=\"[\n        'fixed inset-0 z-40 bg-secondary md:hidden transition-transform duration-300 ease-in-out pt-20',\n        isOpen ? 'translate-x-0' : 'translate-x-full'\n      ]\"\n    >\n      <div class=\"flex flex-col h-full p-6\">\n        <nav class=\"flex flex-col space-y-6 items-center\">\n          <nuxt-link\n            v-for=\"link in [...navLinksLeft, ...navLinksRight]\"\n            :key=\"link.key\"\n            :to=\"link.href\"\n            @click=\"(e) => {\n              if (link.isAnchor) {\n                handleAnchorClick(e, link.anchorId);\n              } else {\n                isOpen = false;\n              }\n            }\"\n            class=\"text-lg font-medium text-primary hover:text-primary/80 transition-colors\"\n          >\n            {{ t(link.key) }}\n          </nuxt-link>\n        </nav>\n      </div>\n    </div>\n  </header>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useLanguage } from '~/context/language-context';\n\nconst { t } = useLanguage();\n\nimport LanguageSwitcher from '~/components/LanguageSwitcher.vue';\n\nconst navLinksLeft = [\n  { key: \"nav.about\", href: \"/#aboutus\", isAnchor: true, anchorId: \"about\" },\n  { key: \"nav.services\", href: \"#services\", isAnchor: true, anchorId: \"services\" },\n];\n\nconst navLinksRight = [\n  { key: \"nav.blog\", href: \"/blog\", isAnchor: false },\n  { key: \"nav.contact\", href: \"#contact\", isAnchor: true, anchorId: \"contact\" },\n];\n\nconst isOpen = ref(false);\nconst scrolled = ref(false);\nconst mounted = ref(false);\nconst route = useRoute();\n\n// Determine if we're on the home page and not scrolled\nconst isHomeAndNotScrolled = computed(() => {\n  return mounted.value && !scrolled.value && route.path === \"/\";\n});\n\nonMounted(() => {\n  mounted.value = true;\n\n  const handleScroll = () => {\n    if (window.scrollY > 10) {\n      scrolled.value = true;\n    } else {\n      scrolled.value = false;\n    }\n  };\n\n  window.addEventListener(\"scroll\", handleScroll);\n  \n  // Cleanup\n  onUnmounted(() => {\n    window.removeEventListener(\"scroll\", handleScroll);\n  });\n});\n\n// Handle smooth scrolling for anchor links\nconst handleAnchorClick = (e, anchorId) => {\n  if (!anchorId) return;\n\n  e.preventDefault();\n  isOpen.value = false; // Close mobile menu if open\n\n  // Only scroll if we're on the home page\n  if (route.path === '/') {\n    const element = document.getElementById(anchorId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  } else {\n    // If on another page, navigate to home with hash\n    window.location.href = `/#${anchorId}`;\n  }\n};\n</script>\n\n"],"names":[],"mappings":";;;;;;;;;;AA2GM,UAAA,EAAE,EAAE,IAAI,YAAY;AAI1B,UAAM,eAAe;AAAA,MACnB,EAAE,KAAK,aAAa,MAAM,aAAa,UAAU,MAAM,UAAU,QAAQ;AAAA,MACzE,EAAE,KAAK,gBAAgB,MAAM,aAAa,UAAU,MAAM,UAAU,WAAW;AAAA,IACjF;AAEA,UAAM,gBAAgB;AAAA,MACpB,EAAE,KAAK,YAAY,MAAM,SAAS,UAAU,MAAM;AAAA,MAClD,EAAE,KAAK,eAAe,MAAM,YAAY,UAAU,MAAM,UAAU,UAAU;AAAA,IAC9E;AAEM,UAAA,SAAS,IAAI,KAAK;AAClB,UAAA,WAAW,IAAI,KAAK;AACpB,UAAA,UAAU,IAAI,KAAK;AACzB,UAAM,QAAQ,SAAS;AAGM,aAAS,MAAM;AAC1C,aAAO,QAAQ,SAAS,CAAC,SAAS,SAAS,MAAM,SAAS;AAAA,IAC3D,CAAA;AAsBK,UAAA,oBAAoB,CAAC,GAAG,aAAa;AACzC,UAAI,CAAC,SAAU;AAEf,QAAE,eAAe;AACjB,aAAO,QAAQ;AAGX,UAAA,MAAM,SAAS,KAAK;AAChB,cAAA,UAAmB,SAAA,eAAe,QAAQ;AAChD,YAAI,SAAS;AACX,kBAAQ,eAAe,EAAE,UAAU,SAAA,CAAU;AAAA,QAAA;AAAA,MAC/C,OACK;AAEE,QAAA,SAAA,SAAS,OAAO,KAAK,QAAQ;AAAA,MAAA;AAAA,IAExC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}