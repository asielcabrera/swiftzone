{"version":3,"file":"Contact.vue.mjs","sources":["../../../../../components/ui/Contact.vue"],"sourcesContent":["<template>\n  <!-- CTA Section -->\n  <section \n    id=\"contact\"\n    class=\"section-padding bg-primary text-white scroll-mt-24\"\n  >\n    <div class=\"container-custom\">\n      <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n        <div data-aos=\"fade-right\" class=\"aos-init\">\n          <h2 class=\"text-3xl md:text-4xl font-bold mb-6\">\n            Ready to Boost Your Digital Presence?\n          </h2>\n          <p class=\"text-primary-foreground/90 text-lg mb-8 max-w-xl\">\n            Contact us today and discover how we can help you achieve your\n            business goals through innovative digital solutions.\n          </p>\n          <!-- <div class=\"flex flex-wrap gap-4\">\n            <button\n              class=\"inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 shadow h-10 rounded-md px-8 bg-white text-primary hover:bg-white/90\"\n            >\n              Request Quote</button\n            ><button\n              class=\"inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 border shadow-sm h-10 rounded-md px-8 border-white text-white bg-transparent hover:bg-white hover:text-primary transition-all\"\n            >\n              Schedule a Call\n            </button>\n          </div> -->\n        </div>\n        <div class=\"relative aos-init\" data-aos=\"fade-left\">\n          <div class=\"bg-primary-foreground/10 p-8 rounded-xl backdrop-blur-sm\">\n            <h3 class=\"text-xl font-bold mb-4\">Have a question?</h3>\n            <p class=\"text-primary-foreground/80 mb-6\">\n              Fill out the form and we'll get back to you as soon as possible.\n            </p>\n            <form @submit.prevent=\"handleSubmit\" class=\"space-y-4\">\n              <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    v-model=\"formData.name\"\n                    :class=\"{'border-red-500': errors.name}\"\n                    class=\"w-full p-3 rounded-md bg-white/10 border border-white/20 text-white placeholder:text-white/60 focus:outline-none focus:ring-2 focus:ring-white/50\"\n                  />\n                  <p v-if=\"errors.name\" class=\"mt-1 text-sm text-red-300\">{{ errors.name }}</p>\n                </div>\n                <div>\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    v-model=\"formData.email\"\n                    :class=\"{'border-red-500': errors.email}\"\n                    class=\"w-full p-3 rounded-md bg-white/10 border border-white/20 text-white placeholder:text-white/60 focus:outline-none focus:ring-2 focus:ring-white/50\"\n                  />\n                  <p v-if=\"errors.email\" class=\"mt-1 text-sm text-red-300\">{{ errors.email }}</p>\n                </div>\n              </div>\n              <div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Subject\"\n                  v-model=\"formData.subject\"\n                  :class=\"{'border-red-500': errors.subject}\"\n                  class=\"w-full p-3 rounded-md bg-white/10 border border-white/20 text-white placeholder:text-white/60 focus:outline-none focus:ring-2 focus:ring-white/50\"\n                />\n                <p v-if=\"errors.subject\" class=\"mt-1 text-sm text-red-300\">{{ errors.subject }}</p>\n              </div>\n              <div>\n                <textarea\n                  placeholder=\"Message\"\n                  rows=\"4\"\n                  v-model=\"formData.message\"\n                  :class=\"{'border-red-500': errors.message}\"\n                  class=\"w-full p-3 rounded-md bg-white/10 border border-white/20 text-white placeholder:text-white/60 focus:outline-none focus:ring-2 focus:ring-white/50 resize-none\"\n                ></textarea>\n                <p v-if=\"errors.message\" class=\"mt-1 text-sm text-red-300\">{{ errors.message }}</p>\n              </div>\n              <button\n                type=\"submit\"\n                :disabled=\"isSubmitting\"\n                class=\"inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0 shadow h-10 rounded-md px-8 bg-white text-primary hover:bg-white/90\"\n              >\n                <span v-if=\"isSubmitting\" class=\"mr-2\">\n                  <Icon name=\"lucide:loader\" class=\"animate-spin h-5 w-5\" />\n                </span>\n                {{ isSubmitting ? 'Sending...' : 'Send Message' }}\n              </button>\n              \n              <div v-if=\"submitStatus\" :class=\"submitStatus.success ? 'text-green-300' : 'text-red-300'\" class=\"text-center mt-4\">\n                {{ submitStatus.message }}\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\n\nconst formData = reactive({\n  name: '',\n  email: '',\n  subject: '',\n  message: ''\n});\n\nconst errors = reactive({\n  name: '',\n  email: '',\n  subject: '',\n  message: ''\n});\n\nconst isSubmitting = ref(false);\nconst submitStatus = ref(null);\n\nconst validateForm = () => {\n  let isValid = true;\n  \n  // Reset errors\n  Object.keys(errors).forEach(key => errors[key] = '');\n  \n  // Validate name\n  if (!formData.name.trim()) {\n    errors.name = 'Name is required';\n    isValid = false;\n  }\n  \n  // Validate email\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!formData.email.trim()) {\n    errors.email = 'Email is required';\n    isValid = false;\n  } else if (!emailRegex.test(formData.email)) {\n    errors.email = 'Please enter a valid email address';\n    isValid = false;\n  }\n  \n  // Validate subject\n  if (!formData.subject.trim()) {\n    errors.subject = 'Subject is required';\n    isValid = false;\n  }\n  \n  // Validate message\n  if (!formData.message.trim()) {\n    errors.message = 'Message is required';\n    isValid = false;\n  } else if (formData.message.trim().length < 10) {\n    errors.message = 'Message must be at least 10 characters long';\n    isValid = false;\n  }\n  \n  return isValid;\n};\n\nconst handleSubmit = async () => {\n  if (!validateForm()) {\n    return;\n  }\n  \n  isSubmitting.value = true;\n  submitStatus.value = null;\n  \n  try {\n    const response = await fetch('/api/send-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData)\n    });\n    \n    const data = await response.json();\n    \n    if (response.ok) {\n      submitStatus.value = {\n        success: true,\n        message: 'Message sent successfully! We will get back to you soon.'\n      };\n      \n      // Reset form\n      Object.keys(formData).forEach(key => formData[key] = '');\n    } else {\n      submitStatus.value = {\n        success: false,\n        message: data.error || 'There was an error sending your message. Please try again.'\n      };\n    }\n  } catch (error) {\n    console.error('Error sending email:', error);\n    submitStatus.value = {\n      success: false,\n      message: 'There was an error sending your message. Please try again.'\n    };\n  } finally {\n    isSubmitting.value = false;\n  }\n};\n</script>\n"],"names":[],"mappings":";;;;;;;AAsGA,UAAM,WAAW,SAAS;AAAA,MACxB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC;AAED,UAAM,SAAS,SAAS;AAAA,MACtB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC;AAED,UAAM,eAAe,IAAI,KAAK;AAC9B,UAAM,eAAe,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}