{"file":"contact.vue.mjs","mappings":";;;;;;;;AAsGA,UAAM,WAAW,SAAS;AAAA,MACxB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC;AAED,UAAM,SAAS,SAAS;AAAA,MACtB,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,IACX,CAAC;AAED,UAAM,eAAe,IAAI,KAAK;AAC9B,UAAM,eAAe,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/contact.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Hero Section -->\n    <section class=\"py-20 md:py-28 bg-secondary\" data-aos=\"fade-down\">\n      <div class=\"container-custom\">\n        <div class=\"max-w-3xl mx-auto\">\n          <nuxt-link to=\"/\" class=\"inline-flex items-center text-primary font-medium mb-6 hover:underline\" data-aos=\"fade-right\" data-aos-delay=\"100\">\n            <Icon name=\"lucide:arrow-left\" class=\"h-4 w-4 mr-2\" /> Volver al inicio\n          </nuxt-link>\n          <h1 class=\"text-3xl md:text-5xl font-bold mb-6 text-primary\" data-aos=\"fade-up\" data-aos-delay=\"200\">\n            Contacto\n          </h1>\n          <p class=\"text-gray-700 text-lg mb-10\" data-aos=\"fade-up\" data-aos-delay=\"300\">\n            Estamos aquí para ayudarte. Envíanos un mensaje y nos pondremos en contacto contigo lo antes posible.\n          </p>\n        </div>\n      </div>\n    </section>\n\n    <!-- Contact Form Section -->\n    <section class=\"py-16 md:py-24\" data-aos=\"fade-up\">\n      <div class=\"container-custom\">\n        <div class=\"max-w-2xl mx-auto bg-white rounded-xl shadow-md p-8\">\n          <form @submit.prevent=\"handleSubmit\" class=\"space-y-6\">\n            <div>\n              <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-1\">Nombre</label>\n              <input \n                type=\"text\" \n                id=\"name\" \n                v-model=\"formData.name\" \n                class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                :class=\"{'border-red-500': errors.name}\"\n                required\n              />\n              <p v-if=\"errors.name\" class=\"mt-1 text-sm text-red-500\">{{ errors.name }}</p>\n            </div>\n            \n            <div>\n              <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">Correo electrónico</label>\n              <input \n                type=\"email\" \n                id=\"email\" \n                v-model=\"formData.email\" \n                class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                :class=\"{'border-red-500': errors.email}\"\n                required\n              />\n              <p v-if=\"errors.email\" class=\"mt-1 text-sm text-red-500\">{{ errors.email }}</p>\n            </div>\n            \n            <div>\n              <label for=\"subject\" class=\"block text-sm font-medium text-gray-700 mb-1\">Asunto</label>\n              <input \n                type=\"text\" \n                id=\"subject\" \n                v-model=\"formData.subject\" \n                class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                :class=\"{'border-red-500': errors.subject}\"\n                required\n              />\n              <p v-if=\"errors.subject\" class=\"mt-1 text-sm text-red-500\">{{ errors.subject }}</p>\n            </div>\n            \n            <div>\n              <label for=\"message\" class=\"block text-sm font-medium text-gray-700 mb-1\">Mensaje</label>\n              <textarea \n                id=\"message\" \n                v-model=\"formData.message\" \n                rows=\"5\" \n                class=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                :class=\"{'border-red-500': errors.message}\"\n                required\n              ></textarea>\n              <p v-if=\"errors.message\" class=\"mt-1 text-sm text-red-500\">{{ errors.message }}</p>\n            </div>\n            \n            <div>\n              <button \n                type=\"submit\" \n                class=\"w-full bg-primary text-white py-3 px-6 rounded-md hover:bg-primary-dark transition-colors duration-300 flex items-center justify-center\"\n                :disabled=\"isSubmitting\"\n              >\n                <span v-if=\"isSubmitting\" class=\"mr-2\">\n                  <Icon name=\"lucide:loader\" class=\"animate-spin h-5 w-5\" />\n                </span>\n                {{ isSubmitting ? 'Enviando...' : 'Enviar mensaje' }}\n              </button>\n            </div>\n            \n            <div v-if=\"submitStatus\" :class=\"submitStatus.success ? 'text-green-600' : 'text-red-600'\" class=\"text-center mt-4\">\n              {{ submitStatus.message }}\n            </div>\n          </form>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue';\n\nconst formData = reactive({\n  name: '',\n  email: '',\n  subject: '',\n  message: ''\n});\n\nconst errors = reactive({\n  name: '',\n  email: '',\n  subject: '',\n  message: ''\n});\n\nconst isSubmitting = ref(false);\nconst submitStatus = ref(null);\n\nconst validateForm = () => {\n  let isValid = true;\n  \n  // Reset errors\n  Object.keys(errors).forEach(key => errors[key] = '');\n  \n  // Validate name\n  if (!formData.name.trim()) {\n    errors.name = 'El nombre es requerido';\n    isValid = false;\n  }\n  \n  // Validate email\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!formData.email.trim()) {\n    errors.email = 'El correo electrónico es requerido';\n    isValid = false;\n  } else if (!emailRegex.test(formData.email)) {\n    errors.email = 'Por favor ingrese un correo electrónico válido';\n    isValid = false;\n  }\n  \n  // Validate subject\n  if (!formData.subject.trim()) {\n    errors.subject = 'El asunto es requerido';\n    isValid = false;\n  }\n  \n  // Validate message\n  if (!formData.message.trim()) {\n    errors.message = 'El mensaje es requerido';\n    isValid = false;\n  } else if (formData.message.trim().length < 10) {\n    errors.message = 'El mensaje debe tener al menos 10 caracteres';\n    isValid = false;\n  }\n  \n  return isValid;\n};\n\nconst handleSubmit = async () => {\n  if (!validateForm()) {\n    return;\n  }\n  \n  isSubmitting.value = true;\n  submitStatus.value = null;\n  \n  try {\n    const response = await fetch('/api/send-email', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData)\n    });\n    \n    const data = await response.json();\n    \n    if (response.ok) {\n      submitStatus.value = {\n        success: true,\n        message: '¡Mensaje enviado con éxito! Nos pondremos en contacto contigo pronto.'\n      };\n      \n      // Reset form\n      Object.keys(formData).forEach(key => formData[key] = '');\n    } else {\n      submitStatus.value = {\n        success: false,\n        message: data.error || 'Hubo un error al enviar el mensaje. Por favor intenta de nuevo.'\n      };\n    }\n  } catch (error) {\n    console.error('Error sending email:', error);\n    submitStatus.value = {\n      success: false,\n      message: 'Hubo un error al enviar el mensaje. Por favor intenta de nuevo.'\n    };\n  } finally {\n    isSubmitting.value = false;\n  }\n};\n</script>"],"version":3}